'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = resolveModule;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _lodash = require('lodash');

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Slow synchronous version of https://github.com/megawac/lodash-modularize/blob/master/src/lodashModules.js
// Using the paths lodash-cli provides is not an option as they may change version to version =(

function getDirectories(srcPath) {
  return _fs2.default.readdirSync(srcPath).filter(function (filePath) {
    return _fs2.default.statSync(_path2.default.join(srcPath, filePath)).isDirectory();
  });
}

var expectedPath = './node_modules/lodash';
var modularizePath = _path2.default.join(__dirname, '../node_modules/lodash');

var lodashPath = _fs2.default.existsSync(expectedPath) ? expectedPath : modularizePath;

var categoryMap = (0, _lodash.transform)(getDirectories(lodashPath), function (result, category) {
  result[category] = _fs2.default.readdirSync(_path2.default.join(lodashPath, category)).map(function (name) {
    return _path2.default.basename(name, '.js');
  });
}, {});

function resolveModule(name) {
  var category = (0, _lodash.findKey)(categoryMap, function (funcs) {
    return funcs.indexOf(name) > -1;
  });
  if (category) {
    return _path2.default.join('lodash', category, name);
  }
  throw new Error('lodash method ' + name + ' was not in known modules\n    Please file a bug if it\'s my fault https://github.com/megawac/babel-plugin-lodash/issues\n  ');
};